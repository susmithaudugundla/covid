{"ast":null,"code":"import React from 'react';\nimport { withRouter } from \"react-router\";\nimport { observable, decorate, action } from \"mobx\";\nimport { inject, observer, Observer } from \"mobx-react\";\n/*class TodoList extends React.Component {\n    secondsPassed = 0;\n\n    componentWillMount() {\n        setInterval(() => {\n            this.secondsPassed++\n        }, 1000)\n    }\n\n    render() {\n        return <span>Seconds passed: {this.secondsPassed} </span>\n    }\n}\ndecorate(TodoList, {\n  secondsPassed: observable\n})*/\n\n/*let timerData = observable({\n    secondsPassed: 0\n})\n\nsetInterval(() => {\n    timerData.secondsPassed++\n}, 1000)\n\nconst TodoList=observer(()=><span>Seconds passed: {timerData.secondsPassed} </span>)\n\nexport default withRouter(TodoList);*/\n\n/*let timerData = observable({\n    secondsPassed: 0\n})\n\nsetInterval(() => {\n    timerData.secondsPassed++\n}, 1000)\n\nconst TodoList=(()=><Observer>{()=><span>Seconds passed: {timerData.secondsPassed} </span>}</Observer>)\n*/\n\nclass TodoList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.tick = 0;\n  }\n\n  increment() {\n    this.tick++;\n  }\n\n}\n\ndecorate(TodoList, {\n  tick: observable,\n  increment: action.bound\n});\nconst ticker = new TodoList();\nsetInterval(ticker.increment, 1000);\nexport default withRouter(TodoList);","map":{"version":3,"sources":["/home/rgukt/Projects/covid-19/src/components/MobX/mobx.js"],"names":["React","withRouter","observable","decorate","action","inject","observer","Observer","TodoList","Component","tick","increment","bound","ticker","setInterval"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,UAAT,EAAqBC,QAArB,EAA+BC,MAA/B,QAA6C,MAA7C;AACA,SAAQC,MAAR,EAAgBC,QAAhB,EAAyBC,QAAzB,QAAwC,YAAxC;AAEA;;;;;;;;;;;;;;;;;AAgBA;;;;;;;;;;;;AAYA;;;;;;;;;;;AAWA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAsC;AAAA;AAAA;AAAA,SAElCC,IAFkC,GAE3B,CAF2B;AAAA;;AAIlCC,EAAAA,SAAS,GAAG;AACR,SAAKD,IAAL;AACH;;AANiC;;AAQtCP,QAAQ,CAACK,QAAD,EAAU;AACdE,EAAAA,IAAI,EAACR,UADS;AAEdS,EAAAA,SAAS,EAACP,MAAM,CAACQ;AAFH,CAAV,CAAR;AAKA,MAAMC,MAAM,GAAG,IAAIL,QAAJ,EAAf;AACAM,WAAW,CAACD,MAAM,CAACF,SAAR,EAAmB,IAAnB,CAAX;AAGA,eAAeV,UAAU,CAACO,QAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { withRouter } from \"react-router\";\nimport { observable, decorate, action } from \"mobx\";\nimport {inject, observer,Observer} from \"mobx-react\";\n\n/*class TodoList extends React.Component {\n    secondsPassed = 0;\n\n    componentWillMount() {\n        setInterval(() => {\n            this.secondsPassed++\n        }, 1000)\n    }\n\n    render() {\n        return <span>Seconds passed: {this.secondsPassed} </span>\n    }\n}\ndecorate(TodoList, {\n  secondsPassed: observable\n})*/\n/*let timerData = observable({\n    secondsPassed: 0\n})\n\nsetInterval(() => {\n    timerData.secondsPassed++\n}, 1000)\n\nconst TodoList=observer(()=><span>Seconds passed: {timerData.secondsPassed} </span>)\n\nexport default withRouter(TodoList);*/\n\n/*let timerData = observable({\n    secondsPassed: 0\n})\n\nsetInterval(() => {\n    timerData.secondsPassed++\n}, 1000)\n\nconst TodoList=(()=><Observer>{()=><span>Seconds passed: {timerData.secondsPassed} </span>}</Observer>)\n*/\n\nclass TodoList extends React.Component{\n    \n    tick = 0;\n    \n    increment() {\n        this.tick++;\n    }\n}\ndecorate(TodoList,{\n    tick:observable,\n    increment:action.bound\n})\n\nconst ticker = new TodoList()\nsetInterval(ticker.increment, 1000)\n\n\nexport default withRouter(TodoList);\n"]},"metadata":{},"sourceType":"module"}