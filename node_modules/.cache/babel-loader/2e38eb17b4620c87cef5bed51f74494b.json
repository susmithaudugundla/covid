{"ast":null,"code":"var _jsxFileName = \"/home/rgukt/Projects/covid-19/src/components/MobX/mobx.js\";\nimport React from 'react';\nimport { withRouter } from \"react-router\";\nimport { observable, computed, decorate } from \"mobx\";\n\nclass TodoList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.secondsPassed = 0;\n  }\n\n  componentWillMount() {\n    console.log(this.secondsPassed);\n    setInterval(() => {\n      this.secondsPassed++;\n    }, 1000);\n  }\n\n  render() {\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"Seconds passed: \", this.secondsPassed, \" \");\n  }\n\n}\n\ndecorate(TodoList, {\n  TodoList: observer,\n  secondsPassed: observable\n});\nexport default withRouter(TodoList);","map":{"version":3,"sources":["/home/rgukt/Projects/covid-19/src/components/MobX/mobx.js"],"names":["React","withRouter","observable","computed","decorate","TodoList","Component","secondsPassed","componentWillMount","console","log","setInterval","render","observer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,UAAT,EAAqBC,QAArB,EAA+BC,QAA/B,QAA+C,MAA/C;;AAEA,MAAMC,QAAN,SAAuBL,KAAK,CAACM,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACpCC,aADoC,GACpB,CADoB;AAAA;;AAGnCC,EAAAA,kBAAkB,GAAG;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,aAAjB;AACAI,IAAAA,WAAW,CAAC,MAAM;AACd,WAAKJ,aAAL;AACH,KAFU,EAER,IAFQ,CAAX;AAGH;;AAEDK,EAAAA,MAAM,GAAG;AACL,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAuB,KAAKL,aAA5B,MAAP;AACH;;AAZkC;;AAevCH,QAAQ,CAACC,QAAD,EAAW;AACjBA,EAAAA,QAAQ,EAACQ,QADQ;AAEjBN,EAAAA,aAAa,EAAEL;AAFE,CAAX,CAAR;AAKA,eAAeD,UAAU,CAACI,QAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { withRouter } from \"react-router\";\nimport { observable, computed, decorate } from \"mobx\"\n\nclass TodoList extends React.Component {\n   secondsPassed = 0\n\n    componentWillMount() {\n        console.log(this.secondsPassed);\n        setInterval(() => {\n            this.secondsPassed++\n        }, 1000)\n    }\n\n    render() {\n        return <span>Seconds passed: {this.secondsPassed} </span>\n    }\n}\n\ndecorate(TodoList, {\n  TodoList:observer,\n  secondsPassed: observable\n})\n\nexport default withRouter(TodoList);"]},"metadata":{},"sourceType":"module"}