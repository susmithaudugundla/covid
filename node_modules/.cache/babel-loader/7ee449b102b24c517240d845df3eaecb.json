{"ast":null,"code":"var _jsxFileName = \"/home/rgukt/Projects/covid-19/src/components/MobX/mobx.js\";\nimport React from 'react';\nimport { withRouter } from \"react-router\";\nimport { observable, decorate } from \"mobx\";\nimport { inject, observer } from \"mobx-react\";\n/*class TodoList extends React.Component {\n    secondsPassed = 0;\n\n    componentWillMount() {\n        setInterval(() => {\n            this.secondsPassed++\n        }, 1000)\n    }\n\n    render() {\n        return <span>Seconds passed: {this.secondsPassed} </span>\n    }\n}\ndecorate(TodoList, {\n  secondsPassed: observable\n})*/\n\nlet timerData = observable({\n  secondsPassed: 0\n});\nsetInterval(() => {\n  timerData.secondsPassed++;\n}, 1000);\nconst Timer = observer(() => React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, \"Seconds passed: \", timerData.secondsPassed, \" \"));\nexport default withRouter(TodoList);","map":{"version":3,"sources":["/home/rgukt/Projects/covid-19/src/components/MobX/mobx.js"],"names":["React","withRouter","observable","decorate","inject","observer","timerData","secondsPassed","setInterval","Timer","TodoList"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,MAArC;AACA,SAAQC,MAAR,EAAgBC,QAAhB,QAA+B,YAA/B;AAEA;;;;;;;;;;;;;;;;;AAgBA,IAAIC,SAAS,GAAGJ,UAAU,CAAC;AACvBK,EAAAA,aAAa,EAAE;AADQ,CAAD,CAA1B;AAIAC,WAAW,CAAC,MAAM;AACdF,EAAAA,SAAS,CAACC,aAAV;AACH,CAFU,EAER,IAFQ,CAAX;AAIA,MAAME,KAAK,GAACJ,QAAQ,CAAC,MAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAuBC,SAAS,CAACC,aAAjC,MAAL,CAApB;AAEA,eAAeN,UAAU,CAACS,QAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { withRouter } from \"react-router\";\nimport { observable, decorate } from \"mobx\";\nimport {inject, observer} from \"mobx-react\";\n\n/*class TodoList extends React.Component {\n    secondsPassed = 0;\n\n    componentWillMount() {\n        setInterval(() => {\n            this.secondsPassed++\n        }, 1000)\n    }\n\n    render() {\n        return <span>Seconds passed: {this.secondsPassed} </span>\n    }\n}\ndecorate(TodoList, {\n  secondsPassed: observable\n})*/\nlet timerData = observable({\n    secondsPassed: 0\n})\n\nsetInterval(() => {\n    timerData.secondsPassed++\n}, 1000)\n\nconst Timer=observer(()=><span>Seconds passed: {timerData.secondsPassed} </span>)\n\nexport default withRouter(TodoList);\n"]},"metadata":{},"sourceType":"module"}