{"ast":null,"code":"var _jsxFileName = \"/home/rgukt/Projects/covid-19/src/components/calendar/side.tsx\";\n// import the calendarcomponent\nimport { CalendarComponent } from '@syncfusion/ej2-react-calendars';\nimport * as React from \"react\";\nimport './side.css';\n\nclass SideCalendar extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.dateValue = new Date();\n  }\n\n  disabledDate(args) {\n    if (args.date.getDay() === 0 || args.date.getDay() === 6) {\n      // set 'true' to disable the weekends\n      args.isDisabled = true;\n    }\n  }\n\n  render() {\n    return React.createElement(CalendarComponent, {\n      id: \"calendar\",\n      renderDayCell: this.disabledDate,\n      value: this.dateValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    });\n  }\n\n}\n\n;\nexport default SideCalendar;","map":{"version":3,"sources":["/home/rgukt/Projects/covid-19/src/components/calendar/side.tsx"],"names":["CalendarComponent","React","SideCalendar","Component","dateValue","Date","disabledDate","args","date","getDay","isDisabled","render"],"mappings":";AAAA;AACA,SAASA,iBAAT,QAA0D,iCAA1D;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,OAAO,YAAP;;AAEA,MAAMC,YAAN,SAA2BD,KAAK,CAACE,SAAjC,CAA2C;AAAA;AAAA;AAAA,SAC/BC,SAD+B,GACb,IAAIC,IAAJ,EADa;AAAA;;AAGhCC,EAAAA,YAAP,CAAoBC,IAApB,EAAwD;AACpD,QAAKA,IAAI,CAACC,IAAN,CAAoBC,MAApB,OAAiC,CAAjC,IAAuCF,IAAI,CAACC,IAAN,CAAoBC,MAApB,OAAiC,CAA3E,EAA8E;AAC1E;AACAF,MAAAA,IAAI,CAACG,UAAL,GAAkB,IAAlB;AACH;AACJ;;AACDC,EAAAA,MAAM,GAAG;AACL,WAAO,oBAAC,iBAAD;AAAmB,MAAA,EAAE,EAAC,UAAtB;AAAiC,MAAA,aAAa,EAAE,KAAKL,YAArD;AAAmE,MAAA,KAAK,EAAE,KAAKF,SAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAXsC;;AAY1C;AAED,eAAeF,YAAf","sourcesContent":["// import the calendarcomponent\nimport { CalendarComponent, RenderDayCellEventArgs } from '@syncfusion/ej2-react-calendars';\nimport * as React from \"react\";\nimport * as ReactDOM from 'react-dom';\nimport './side.css';\n\nclass SideCalendar extends React.Component {\n    private dateValue: Date = new Date();\n\n    public disabledDate(args: RenderDayCellEventArgs): void {\n        if ((args.date as Date).getDay() === 0 || (args.date as Date).getDay() === 6) {\n            // set 'true' to disable the weekends\n            args.isDisabled = true;\n        }\n    }\n    render() {\n        return <CalendarComponent id=\"calendar\" renderDayCell={this.disabledDate} value={this.dateValue} />\n    }\n};\n\nexport default SideCalendar;"]},"metadata":{},"sourceType":"module"}