{"ast":null,"code":"var _jsxFileName = \"/home/rgukt/Desktop/todoapp/src/components/countriesData/data.js\";\nimport React from 'react';\nimport Country from './country.js';\nimport './country.css';\nimport { withRouter } from \"react-router\";\nimport image from \"./index.svg\";\n\nclass Data extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.region = event => {\n      if (event.target.value === \"all\") {\n        this.setState({\n          dataEl: this.tempCountries\n        });\n      } else {\n        this.setState({\n          dataEl: this.tempCountries.filter(region => region.region === event.target.value)\n        });\n      }\n    };\n\n    this.nameSearch = event => {\n      if (event.keyCode === 13) {\n        let matched = [];\n        let stri = event.target.value.toLowerCase();\n\n        for (let i = 0; i < this.tempCountries.length; i++) {\n          let matchedCountries = this.tempCountries[i].name.toLowerCase().includes(stri);\n\n          if (matchedCountries) {\n            matched.push(this.tempCountries[i]);\n          }\n        }\n\n        this.atleastOneCountry = true;\n        this.setState({\n          dataEl: matched\n        });\n      }\n    };\n\n    this.getCountryInfo = countryData => {\n      const {\n        history\n      } = this.props;\n      this.props.history.push(`/countriesId/:${countryData.alpha3Code}`);\n      this.props.history.location.state = countryData;\n    };\n\n    this.state = {\n      dataEl: []\n    };\n    this.tempCountries = [];\n  }\n\n  async componentDidMount() {\n    let response = await fetch('http://restcountries.eu/rest/v2/all');\n    let jsonData = await response.json();\n    this.tempCountries = jsonData;\n    this.setState({\n      dataEl: jsonData\n    });\n    this.atleastOneCountry = false;\n  }\n\n  render() {\n    if (this.state.dataEl.length === 0) {\n      if (!this.atleastOneCountry) {\n        return React.createElement(\"div\", {\n          className: \"loading\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: image,\n          alt: \"Loading\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(\"div\", {\n          className: \"body-background\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"search-bar\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          placeholder: \"search for a country...\",\n          onKeyDown: this.nameSearch,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }), React.createElement(\"select\", {\n          id: \"region\",\n          onChange: this.region,\n          name: \"region\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          value: \"all\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, \"All\"), React.createElement(\"option\", {\n          value: \"Asia\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, \"Asia\"), React.createElement(\"option\", {\n          value: \"Africa\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, \"Africa\"), React.createElement(\"option\", {\n          value: \"Americas\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, \"Americas\"), React.createElement(\"option\", {\n          value: \"Europe\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, \"Europe\"), React.createElement(\"option\", {\n          value: \"Oceania\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, \"Oceania\"))));\n      }\n    } else {\n      return React.createElement(\"div\", {\n        className: \"body-background\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"search-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"search for a country...\",\n        onKeyDown: this.nameSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        id: \"region\",\n        onChange: this.region,\n        name: \"region\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"all\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"All\"), React.createElement(\"option\", {\n        value: \"Asia\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Asia\"), React.createElement(\"option\", {\n        value: \"Africa\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Africa\"), React.createElement(\"option\", {\n        value: \"Americas\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Americas\"), React.createElement(\"option\", {\n        value: \"Europe\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Europe\"), React.createElement(\"option\", {\n        value: \"Oceania\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Oceania\"))), React.createElement(\"div\", {\n        className: \"display-property\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, this.state.dataEl.map((data, index) => React.createElement(Country, {\n        countryInfo: this.getCountryInfo,\n        country: data,\n        key: data.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }))));\n    }\n  }\n\n}\n\nexport default withRouter(Data);","map":{"version":3,"sources":["/home/rgukt/Desktop/todoapp/src/components/countriesData/data.js"],"names":["React","Country","withRouter","Data","Component","constructor","props","region","event","target","value","setState","dataEl","tempCountries","filter","nameSearch","keyCode","matched","stri","toLowerCase","i","length","matchedCountries","name","includes","push","atleastOneCountry","getCountryInfo","countryData","history","alpha3Code","location","state","componentDidMount","response","fetch","jsonData","json","render","image","map","data","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Country from './country.js';\nimport './country.css';\nimport { withRouter } from \"react-router\";\nimport image from './index.svg'\nclass Data extends React.Component{\n    constructor(props){\n       super(props)\n        this.state={\n            dataEl:[]\n        }\n        this.tempCountries=[];\n    }\n   async componentDidMount(){\n\n       let response=await fetch('http://restcountries.eu/rest/v2/all');\n       let jsonData=await response.json();\n       this.tempCountries=jsonData;\n       this.setState({\n           dataEl:jsonData\n       })\n       this.atleastOneCountry=false\n\n   }\n   region=(event)=>{\n       if(event.target.value===\"all\"){\n        this.setState({\n            dataEl:this.tempCountries\n        })\n       }\n       else{\n        this.setState({\n            dataEl:this.tempCountries.filter((region)=>region.region===event.target.value)\n        })\n       }\n   }\n   nameSearch=(event)=>{\n       if(event.keyCode===13){\n           let  matched=[];\n           let stri=event.target.value.toLowerCase();\n           for(let i=0;i<this.tempCountries.length;i++){\n               let matchedCountries=this.tempCountries[i].name.toLowerCase().includes(stri);\n               if(matchedCountries){\n                   \n                    matched.push(this.tempCountries[i])\n               }\n           }\n           this.atleastOneCountry=true;\n        this.setState({\n            dataEl:matched\n        })\n       }\n   }\n   getCountryInfo=(countryData)=>{\n    const {history}=this.props;\n    this.props.history.push(`/countriesId/:${countryData.alpha3Code}`);\n    this.props.history.location.state=countryData;\n   }\n    render(){\n        if(this.state.dataEl.length===0)\n        {\n            if(!this.atleastOneCountry)\n            {\n            return(\n                <div className=\"loading\">\n                    <img src={image} alt=\"Loading\"></img>\n                </div>\n            )\n            }\n            else{\n                return(\n               \n                    <div className=\"body-background\">\n                        <div className=\"search-bar\">  \n                            <input type=\"text\" placeholder=\"search for a country...\" onKeyDown={this.nameSearch}></input>\n                            <select id=\"region\" onChange={this.region} name=\"region\">\n                                <option value=\"all\">All</option>\n                                <option value=\"Asia\">Asia</option>\n                                <option value=\"Africa\">Africa</option>\n                                <option value=\"Americas\">Americas</option>\n                                <option value=\"Europe\">Europe</option>\n                                <option value=\"Oceania\">Oceania</option>\n                            </select>\n                        </div>\n                    </div>\n                \n               )\n            }\n        }\n        else{\n            return(\n               \n                <div className=\"body-background\">\n                    <div className=\"search-bar\">  \n                        <input type=\"text\" placeholder=\"search for a country...\" onKeyDown={this.nameSearch}></input>\n                        <select id=\"region\" onChange={this.region} name=\"region\">\n                            <option value=\"all\">All</option>\n                            <option value=\"Asia\">Asia</option>\n                            <option value=\"Africa\">Africa</option>\n                            <option value=\"Americas\">Americas</option>\n                            <option value=\"Europe\">Europe</option>\n                            <option value=\"Oceania\">Oceania</option>\n                        </select>\n                    </div>\n                    <div className=\"display-property\">{this.state.dataEl.map((data,index)=> <Country countryInfo={this.getCountryInfo} country={data} key={data.name}/> )}</div>        \n                </div>\n            \n           )\n        }\n        \n    }\n}\nexport default withRouter(Data);\n"]},"metadata":{},"sourceType":"module"}