{"ast":null,"code":"var _jsxFileName = \"/home/rgukt/Projects/covid-19/src/components/MobX/mobx.js\";\nimport React from 'react';\nimport { withRouter } from \"react-router\";\nimport { observable, decorate, action } from \"mobx\";\nimport { inject, observer, Observer } from \"mobx-react\";\n\nclass TodoList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.secondsPassed = 0;\n  }\n\n  some() {\n    this.secondsPassed++;\n  }\n\n  render() {\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"Seconds passed: \", this.secondsPassed, \" \");\n  }\n\n}\n\ndecorate(TodoList, {\n  secondsPassed: observable\n});\nconst tick = new TodoList();\nsetInterval(() => {\n  tick.some();\n}, 1000);\n/*let timerData = observable({\n    secondsPassed: 0\n})\n\nsetInterval(() => {\n    timerData.secondsPassed++\n}, 1000)\n\nconst TodoList=observer(()=><span>Seconds passed: {timerData.secondsPassed} </span>)\n\nexport default withRouter(TodoList);*/\n\n/*let timerData = observable({\n    secondsPassed: 0\n})\n\nsetInterval(() => {\n    timerData.secondsPassed++\n}, 1000)\n\nconst TodoList=(()=><Observer>{()=><span>Seconds passed: {timerData.secondsPassed} </span>}</Observer>)\n*/\n\n/*class TodoList extends React.Component {\n    tick = 0\n    increment() {\n        this.tick++;\n        console.log(this.tick);\n    }\n    render() {\n        console.log(\"hello\");\n        return <span>Seconds passed: {this.tick} </span>\n    }\n}\ndecorate(TodoList,{\n    tick:observable,\n    increment:action.bound\n})\n\nconst ticker = new TodoList();\nsetInterval(ticker.increment, 1000);\n*/\n\nexport default withRouter(observer(TodoList));","map":{"version":3,"sources":["/home/rgukt/Projects/covid-19/src/components/MobX/mobx.js"],"names":["React","withRouter","observable","decorate","action","inject","observer","Observer","TodoList","Component","secondsPassed","some","render","tick","setInterval"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,UAAT,EAAqBC,QAArB,EAA+BC,MAA/B,QAA6C,MAA7C;AACA,SAAQC,MAAR,EAAgBC,QAAhB,EAAyBC,QAAzB,QAAwC,YAAxC;;AAEA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACnCC,aADmC,GACnB,CADmB;AAAA;;AAGnCC,EAAAA,IAAI,GAAG;AACH,SAAKD,aAAL;AACH;;AAEDE,EAAAA,MAAM,GAAG;AACL,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAuB,KAAKF,aAA5B,MAAP;AACH;;AATkC;;AAWvCP,QAAQ,CAACK,QAAD,EAAW;AACjBE,EAAAA,aAAa,EAAER;AADE,CAAX,CAAR;AAGA,MAAMW,IAAI,GAAC,IAAIL,QAAJ,EAAX;AACAM,WAAW,CAAC,MAAM;AACdD,EAAAA,IAAI,CAACF,IAAL;AACH,CAFU,EAER,IAFQ,CAAX;AAGA;;;;;;;;;;;;AAYA;;;;;;;;;;;AAWA;;;;;;;;;;;;;;;;;;;;AAoBA,eAAeV,UAAU,CAACK,QAAQ,CAACE,QAAD,CAAT,CAAzB","sourcesContent":["import React from 'react';\nimport { withRouter } from \"react-router\";\nimport { observable, decorate, action } from \"mobx\";\nimport {inject, observer,Observer} from \"mobx-react\";\n\nclass TodoList extends React.Component {\n    secondsPassed = 0;\n\n    some() {\n        this.secondsPassed++;\n    }\n\n    render() {\n        return <span>Seconds passed: {this.secondsPassed} </span>\n    }\n}\ndecorate(TodoList, {\n  secondsPassed: observable\n})\nconst tick=new TodoList();\nsetInterval(() => {\n    tick.some();\n}, 1000)\n/*let timerData = observable({\n    secondsPassed: 0\n})\n\nsetInterval(() => {\n    timerData.secondsPassed++\n}, 1000)\n\nconst TodoList=observer(()=><span>Seconds passed: {timerData.secondsPassed} </span>)\n\nexport default withRouter(TodoList);*/\n\n/*let timerData = observable({\n    secondsPassed: 0\n})\n\nsetInterval(() => {\n    timerData.secondsPassed++\n}, 1000)\n\nconst TodoList=(()=><Observer>{()=><span>Seconds passed: {timerData.secondsPassed} </span>}</Observer>)\n*/\n\n/*class TodoList extends React.Component {\n    tick = 0\n    increment() {\n        this.tick++;\n        console.log(this.tick);\n    }\n    render() {\n        console.log(\"hello\");\n        return <span>Seconds passed: {this.tick} </span>\n    }\n}\ndecorate(TodoList,{\n    tick:observable,\n    increment:action.bound\n})\n\nconst ticker = new TodoList();\nsetInterval(ticker.increment, 1000);\n*/\n\nexport default withRouter(observer(TodoList));\n"]},"metadata":{},"sourceType":"module"}