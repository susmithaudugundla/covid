{"ast":null,"code":"var _jsxFileName = \"/home/rgukt/Desktop/todoapp/src/components/countriesData/data.js\";\nimport React from 'react';\nimport Country from './country.js';\nimport './country.css';\nimport { withRouter } from \"react-router\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport country from './country.js';\n\nclass Data extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.region = event => {\n      if (event.target.value === \"all\") {\n        this.setState({\n          dataEl: this.tempCountries\n        });\n      } else {\n        this.setState({\n          dataEl: this.tempCountries.filter(region => region.region === event.target.value)\n        });\n      }\n    };\n\n    this.nameSearch = event => {\n      if (event.keyCode === 13) {\n        let matched = [];\n        let stri = event.target.value.toLowerCase();\n\n        for (let i = 0; i < this.tempCountries.length; i++) {\n          let matchedCountries = this.tempCountries[i].name.toLowerCase().includes(stri);\n\n          if (matchedCountries) {\n            matched.push(this.tempCountries[i]);\n          }\n        }\n\n        this.setState({\n          dataEl: matched\n        });\n      }\n    };\n\n    this.getCountryInfo = countryData => {\n      const {\n        history\n      } = this.props;\n      this.props.history.push(`/countriesId/:${countryData.alpha3Code}`);\n      this.props.history.location.state = countryData.alpha3Code;\n    };\n\n    this.state = {\n      dataEl: []\n    };\n    this.tempCountries = [];\n  }\n\n  async componentDidMount() {\n    let response = await fetch('http://restcountries.eu/rest/v2/all');\n    let jsonData = await response.json();\n    this.tempCountries = jsonData;\n    this.setState({\n      dataEl: jsonData\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"body-background\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"search-bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"search for a country...\",\n      onKeyDown: this.nameSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      id: \"region\",\n      onChange: this.region,\n      name: \"region\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"all\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"All\"), React.createElement(\"option\", {\n      value: \"Asia\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Asia\"), React.createElement(\"option\", {\n      value: \"Africa\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Africa\"), React.createElement(\"option\", {\n      value: \"Americas\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Americas\"), React.createElement(\"option\", {\n      value: \"Europe\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Europe\"), React.createElement(\"option\", {\n      value: \"Oceania\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Oceania\"))), React.createElement(\"div\", {\n      className: \"display-property\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, this.state.dataEl.map((data, index) => React.createElement(Country, {\n      countryInfo: this.getCountryInfo,\n      country: data,\n      key: data.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default withRouter(Data);","map":{"version":3,"sources":["/home/rgukt/Desktop/todoapp/src/components/countriesData/data.js"],"names":["React","Country","withRouter","BrowserRouter","Router","Switch","Route","Link","country","Data","Component","constructor","props","region","event","target","value","setState","dataEl","tempCountries","filter","nameSearch","keyCode","matched","stri","toLowerCase","i","length","matchedCountries","name","includes","push","getCountryInfo","countryData","history","alpha3Code","location","state","componentDidMount","response","fetch","jsonData","json","render","map","data","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Country from './country.js';\nimport './country.css';\nimport { withRouter } from \"react-router\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\";\nimport country from './country.js';\nclass Data extends React.Component{\n    constructor(props){\n       super(props)\n        this.state={\n            dataEl:[]\n        }\n        this.tempCountries=[];\n    }\n   async componentDidMount(){\n       let response=await fetch('http://restcountries.eu/rest/v2/all');\n       let jsonData=await response.json();\n       this.tempCountries=jsonData;\n       this.setState({\n           dataEl:jsonData\n       })\n\n   }\n   region=(event)=>{\n       if(event.target.value===\"all\"){\n        this.setState({\n            dataEl:this.tempCountries\n        })\n       }\n       else{\n        this.setState({\n            dataEl:this.tempCountries.filter((region)=>region.region===event.target.value)\n        })\n       }\n   }\n   nameSearch=(event)=>{\n       if(event.keyCode===13){\n           let  matched=[];\n           let stri=event.target.value.toLowerCase();\n           for(let i=0;i<this.tempCountries.length;i++){\n               let matchedCountries=this.tempCountries[i].name.toLowerCase().includes(stri);\n               if(matchedCountries){\n                    matched.push(this.tempCountries[i])\n               }\n           }\n        this.setState({\n            dataEl:matched\n        })\n       }\n   }\n   getCountryInfo=(countryData)=>{\n    const {history}=this.props;\n    this.props.history.push(`/countriesId/:${countryData.alpha3Code}`);\n    this.props.history.location.state=countryData.alpha3Code;\n   }\n    render(){\n        return(\n               \n            <div className=\"body-background\">\n                <div className=\"search-bar\">  \n                    <input type=\"text\" placeholder=\"search for a country...\" onKeyDown={this.nameSearch}></input>\n                    <select id=\"region\" onChange={this.region} name=\"region\">\n                        <option value=\"all\">All</option>\n                        <option value=\"Asia\">Asia</option>\n                        <option value=\"Africa\">Africa</option>\n                        <option value=\"Americas\">Americas</option>\n                        <option value=\"Europe\">Europe</option>\n                        <option value=\"Oceania\">Oceania</option>\n                    </select>\n                </div>\n                <div className=\"display-property\">{this.state.dataEl.map((data,index)=> <Country countryInfo={this.getCountryInfo} country={data} key={data.name}/> )}</div>        \n            </div>\n        \n       )\n    }\n}\nexport default withRouter(Data);\n"]},"metadata":{},"sourceType":"module"}