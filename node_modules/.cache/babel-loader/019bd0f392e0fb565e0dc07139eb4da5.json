{"ast":null,"code":"import _regeneratorRuntime from\"/home/rgukt/Projects/covid-19/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/rgukt/Projects/covid-19/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/home/rgukt/Projects/covid-19/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/rgukt/Projects/covid-19/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/rgukt/Projects/covid-19/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/rgukt/Projects/covid-19/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/rgukt/Projects/covid-19/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import Country from'./country.js';import'./country.css';import{withRouter}from\"react-router\";import image from\"./index.svg\";var Data=/*#__PURE__*/function(_React$Component){_inherits(Data,_React$Component);function Data(props){var _this;_classCallCheck(this,Data);_this=_possibleConstructorReturn(this,_getPrototypeOf(Data).call(this,props));_this.region=function(event){if(event.target.value===\"all\"){_this.setState({dataEl:_this.tempCountries});}else{_this.setState({dataEl:_this.tempCountries.filter(function(region){return region.region===event.target.value;})});}};_this.nameSearch=function(event){if(event.keyCode===13){var matched=[];var stri=event.target.value.toLowerCase();for(var i=0;i<_this.tempCountries.length;i++){var matchedCountries=_this.tempCountries[i].name.toLowerCase().includes(stri);if(matchedCountries){matched.push(_this.tempCountries[i]);}}_this.atleastOneCountry=true;_this.setState({dataEl:matched});}};_this.getCountryInfo=function(countryData){var history=_this.props.history;_this.props.history.push(\"/countriesId/:\".concat(countryData.alpha3Code));_this.props.history.location.state=countryData;};_this.state={dataEl:[],darkmode:false};_this.tempCountries=[];return _this;}_createClass(Data,[{key:\"componentDidMount\",value:function(){var _componentDidMount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,jsonData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch('http://restcountries.eu/rest/v2/all');case 2:response=_context.sent;_context.next=5;return response.json();case 5:jsonData=_context.sent;this.tempCountries=jsonData;this.setState({dataEl:jsonData});this.atleastOneCountry=false;case 9:case\"end\":return _context.stop();}}},_callee,this);}));function componentDidMount(){return _componentDidMount.apply(this,arguments);}return componentDidMount;}()},{key:\"render\",value:function render(){var _this2=this;console.log(this.props.history);if(this.state.dataEl.length===0){if(!this.atleastOneCountry){return React.createElement(\"div\",{className:\"loading\"},React.createElement(\"img\",{src:image,alt:\"Loading\"}));}else{return React.createElement(\"div\",{className:\"body-background\"},React.createElement(\"div\",{className:\"search-bar\"},React.createElement(\"input\",{type:\"text\",placeholder:\"search for a country...\",onKeyDown:this.nameSearch}),React.createElement(\"select\",{id:\"region\",onChange:this.region,name:\"region\"},React.createElement(\"option\",{value:\"all\"},\"All\"),React.createElement(\"option\",{value:\"Asia\"},\"Asia\"),React.createElement(\"option\",{value:\"Africa\"},\"Africa\"),React.createElement(\"option\",{value:\"Americas\"},\"Americas\"),React.createElement(\"option\",{value:\"Europe\"},\"Europe\"),React.createElement(\"option\",{value:\"Oceania\"},\"Oceania\"))));}}else{return React.createElement(\"div\",{className:\"body-background\"},React.createElement(\"div\",{className:\"search-bar\"},React.createElement(\"input\",{type:\"text\",placeholder:\"search for a country...\",onKeyDown:this.nameSearch}),React.createElement(\"select\",{id:\"region\",onChange:this.region,name:\"region\"},React.createElement(\"option\",{value:\"all\"},\"All\"),React.createElement(\"option\",{value:\"Asia\"},\"Asia\"),React.createElement(\"option\",{value:\"Africa\"},\"Africa\"),React.createElement(\"option\",{value:\"Americas\"},\"Americas\"),React.createElement(\"option\",{value:\"Europe\"},\"Europe\"),React.createElement(\"option\",{value:\"Oceania\"},\"Oceania\"))),React.createElement(\"div\",{className:\"display-property\"},this.state.dataEl.map(function(data,index){return React.createElement(Country,{countryInfo:_this2.getCountryInfo,country:data,key:data.name});})));}}}]);return Data;}(React.Component);export default withRouter(Data);","map":{"version":3,"sources":["/home/rgukt/Projects/covid-19/src/components/countriesData/data.js"],"names":["React","Country","withRouter","Data","props","region","event","target","value","setState","dataEl","tempCountries","filter","nameSearch","keyCode","matched","stri","toLowerCase","i","length","matchedCountries","name","includes","push","atleastOneCountry","getCountryInfo","countryData","history","alpha3Code","location","state","darkmode","fetch","response","json","jsonData","console","log","image","map","data","index","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Country from './country.js';\nimport './country.css';\nimport { withRouter } from \"react-router\";\nimport image from './index.svg'\nclass Data extends React.Component{\n    constructor(props){\n       super(props)\n        this.state={\n            dataEl:[],\n            darkmode:false\n        }\n        this.tempCountries=[];\n    }\n   async componentDidMount(){\n\n       let response=await fetch('http://restcountries.eu/rest/v2/all');\n       let jsonData=await response.json();\n       this.tempCountries=jsonData;\n       this.setState({\n           dataEl:jsonData\n       })\n       this.atleastOneCountry=false\n\n   }\n   region=(event)=>{\n       if(event.target.value===\"all\"){\n        this.setState({\n            dataEl:this.tempCountries\n        })\n       }\n       else{\n        this.setState({\n            dataEl:this.tempCountries.filter((region)=>region.region===event.target.value)\n        })\n       }\n   }\n   nameSearch=(event)=>{\n       if(event.keyCode===13){\n           let  matched=[];\n           let stri=event.target.value.toLowerCase();\n           for(let i=0;i<this.tempCountries.length;i++){\n               let matchedCountries=this.tempCountries[i].name.toLowerCase().includes(stri);\n               if(matchedCountries){\n                   \n                    matched.push(this.tempCountries[i])\n               }\n           }\n           this.atleastOneCountry=true;\n        this.setState({\n            dataEl:matched\n        })\n       }\n   }\n   getCountryInfo=(countryData)=>{\n    const {history}=this.props;\n    this.props.history.push(`/countriesId/:${countryData.alpha3Code}`);\n    this.props.history.location.state=countryData;\n   }\n    render(){\n        console.log(this.props.history);\n        if(this.state.dataEl.length===0)\n        {\n            if(!this.atleastOneCountry)\n            {\n            return(\n                <div className=\"loading\">\n                    <img src={image} alt=\"Loading\"></img>\n                </div>\n            )\n            }\n            else{\n                return(\n                    <div className=\"body-background\">\n                        <div className=\"search-bar\">  \n                            <input type=\"text\" placeholder=\"search for a country...\" onKeyDown={this.nameSearch}></input>\n                            <select id=\"region\" onChange={this.region} name=\"region\">\n                                <option value=\"all\">All</option>\n                                <option value=\"Asia\">Asia</option>\n                                <option value=\"Africa\">Africa</option>\n                                <option value=\"Americas\">Americas</option>\n                                <option value=\"Europe\">Europe</option>\n                                <option value=\"Oceania\">Oceania</option>\n                            </select>\n                        </div>\n                    </div>\n                \n               )\n            }\n        }\n        else{\n            return(\n                <div className=\"body-background\">\n                    <div className=\"search-bar\">  \n                        <input type=\"text\" placeholder=\"search for a country...\" onKeyDown={this.nameSearch}></input>\n                        <select id=\"region\" onChange={this.region} name=\"region\">\n                            <option value=\"all\">All</option>\n                            <option value=\"Asia\">Asia</option>\n                            <option value=\"Africa\">Africa</option>\n                            <option value=\"Americas\">Americas</option>\n                            <option value=\"Europe\">Europe</option>\n                            <option value=\"Oceania\">Oceania</option>\n                        </select>\n                    </div>\n                    <div className=\"display-property\">{this.state.dataEl.map((data,index)=> <Country countryInfo={this.getCountryInfo} country={data} key={data.name}/> )}</div>        \n                </div>\n            \n           )\n        }\n        \n    }\n}\nexport default withRouter(Data);\n"]},"metadata":{},"sourceType":"module"}