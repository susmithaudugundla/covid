{"ast":null,"code":"import transform from 'css-to-react-native';\nimport { forwardRef, createElement } from 'react';\nimport { ThemeContext } from '@emotion/core';\n\nvar testAlwaysTrue = function testAlwaysTrue() {\n  return true;\n};\n\nvar pickAssign = function pickAssign(testFn, target) {\n  var i = 2;\n  var length = arguments.length;\n\n  for (; i < length; i++) {\n    var source = arguments[i];\n\n    var _key = void 0;\n\n    for (_key in source) {\n      if (testFn(_key)) {\n        target[_key] = source[_key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction interleave(vals) {\n  var strings = vals[0];\n  var finalArray = [strings[0]];\n\n  for (var i = 1, len = vals.length; i < len; i++) {\n    finalArray.push(vals[i]);\n\n    if (strings[i] !== undefined) {\n      finalArray.push(strings[i]);\n    }\n  }\n\n  return finalArray;\n} // they're reset on every call to css\n// this is done so we don't create a new\n// handleInterpolation function on every css call\n\n\nvar styles;\nvar buffer;\nvar lastType;\n\nfunction handleInterpolation(interpolation, i, arr) {\n  var type = typeof interpolation;\n\n  if (type === 'string') {\n    // strip comments\n    interpolation = interpolation.replace(/\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*$/gm, '');\n  }\n\n  if (type === 'function') {\n    if (this === undefined) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error('Interpolating functions in css calls is not allowed.\\n' + 'If you want to have a css call based on props, create a function that returns a css call like this\\n' + 'let dynamicStyle = (props) => css`color: ${props.color}`\\n' + 'It can be called directly with props or interpolated in a styled call like this\\n' + 'let SomeComponent = styled.View`${dynamicStyle}`');\n      }\n    } else {\n      handleInterpolation.call(this, interpolation( // $FlowFixMe\n      this), i, arr);\n    }\n\n    return;\n  }\n\n  var isIrrelevant = interpolation == null || type === 'boolean';\n  var isRnStyle = type === 'object' && !Array.isArray(interpolation) || type === 'number';\n\n  if (lastType === 'string' && (isRnStyle || isIrrelevant)) {\n    var converted = convertStyles(buffer);\n\n    if (converted !== undefined) {\n      styles.push(converted);\n    }\n\n    buffer = '';\n  }\n\n  if (isIrrelevant) {\n    return;\n  }\n\n  if (type === 'string') {\n    buffer += interpolation;\n\n    if (arr.length - 1 === i) {\n      var _converted = convertStyles(buffer);\n\n      if (_converted !== undefined) {\n        styles.push(_converted);\n      }\n\n      buffer = '';\n    }\n  }\n\n  if (isRnStyle) {\n    styles.push(interpolation);\n  }\n\n  if (Array.isArray(interpolation)) {\n    interpolation.forEach(handleInterpolation, this);\n  }\n\n  lastType = type;\n} // Use platform specific StyleSheet method for creating the styles.\n// This enables us to use the css``/css({}) in any environment (Native | Sketch | Web)\n\n\nfunction createCss(StyleSheet) {\n  return function css() {\n    var vals; // these are declared earlier\n    // this is done so we don't create a new\n    // handleInterpolation function on every css call\n\n    styles = [];\n    buffer = '';\n    lastType = undefined;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (args[0] == null || args[0].raw === undefined) {\n      vals = args;\n    } else {\n      vals = interleave(args);\n    }\n\n    vals.forEach(handleInterpolation, this);\n    return StyleSheet.flatten(styles);\n  };\n}\n\nvar propertyValuePattern = /\\s*([^\\s]+)\\s*:\\s*(.+?)\\s*$/;\n\nfunction convertPropertyValue(style) {\n  // Get prop name and prop value\n  var match = propertyValuePattern.exec(style); // match[2] will be \" \" in cases where there is no value\n  // but there is whitespace, e.g. \"color: \"\n\n  if (match !== null && match[2] !== ' ') {\n    // the first value in the array will\n    // be the whole string so we remove it\n    match.shift(); // yes i know this looks funny\n\n    this.push(match);\n  }\n}\n\nfunction convertStyles(str) {\n  if (str.trim() === '') return;\n  var stylePairs = [];\n  var parsedString = str.split(';');\n  parsedString.forEach(convertPropertyValue, stylePairs);\n\n  try {\n    return transform(stylePairs);\n  } catch (error) {\n    var msg = error.message;\n\n    if (msg.includes('Failed to parse declaration')) {\n      var values = msg.replace('Failed to parse declaration ', '').replace(/\"/g, '').trim().split(':');\n      var errorMsg = \"'\" + values[0] + \"' shorthand property requires units for example - \" + values[0] + \": 20px or \" + values[0] + \": 10px 20px 40px 50px\";\n      console.error(errorMsg);\n    }\n  }\n}\n\nvar defaultPickTest = function defaultPickTest(prop) {\n  return prop !== 'theme' && prop !== 'innerRef';\n};\n\nfunction createStyled(StyleSheet, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$getShouldForward = _ref.getShouldForwardProp,\n      getShouldForwardProp = _ref$getShouldForward === void 0 ? function () {\n    return defaultPickTest;\n  } : _ref$getShouldForward;\n\n  var css = createCss(StyleSheet);\n  return function createEmotion(component) {\n    var pickTest = getShouldForwardProp(component);\n    return function createStyledComponent() {\n      var styles;\n\n      for (var _len = arguments.length, rawStyles = new Array(_len), _key = 0; _key < _len; _key++) {\n        rawStyles[_key] = arguments[_key];\n      }\n\n      if (rawStyles[0] == null || rawStyles[0].raw === undefined) {\n        styles = rawStyles;\n      } else {\n        styles = interleave(rawStyles);\n      } // do we really want to use the same infra as the web since it only really uses theming?\n      // $FlowFixMe\n\n\n      var Styled = forwardRef(function (props, ref) {\n        return createElement(ThemeContext.Consumer, null, function (theme) {\n          var mergedProps = pickAssign(testAlwaysTrue, {}, props, {\n            theme: props.theme || theme\n          });\n          var stylesWithStyleProp = styles;\n\n          if (props.style) {\n            stylesWithStyleProp = styles.concat(props.style);\n          }\n\n          var emotionStyles = css.apply(mergedProps, stylesWithStyleProp);\n\n          if (process.env.NODE_ENV !== 'production' && props.innerRef) {\n            console.error('innerRef is no longer supported, please use ref instead');\n          }\n\n          return createElement(component, pickAssign(pickTest, {}, props, {\n            ref: ref,\n            style: emotionStyles\n          }));\n        });\n      }); // $FlowFixMe\n\n      Styled.withComponent = function (newComponent) {\n        return createEmotion(newComponent).apply(void 0, styles);\n      };\n\n      Styled.displayName = \"emotion(\" + getDisplayName(component) + \")\";\n      return Styled;\n    };\n  };\n}\n\nvar getDisplayName = function getDisplayName(primitive) {\n  return typeof primitive === 'string' ? primitive : primitive.displayName || primitive.name || 'Styled';\n};\n\nexport { createCss, createStyled };","map":{"version":3,"sources":["/home/rgukt/Projects/covid-19/node_modules/@emotion/primitives-core/dist/primitives-core.browser.esm.js"],"names":["transform","forwardRef","createElement","ThemeContext","testAlwaysTrue","pickAssign","testFn","target","i","length","arguments","source","_key","interleave","vals","strings","finalArray","len","push","undefined","styles","buffer","lastType","handleInterpolation","interpolation","arr","type","replace","process","env","NODE_ENV","console","error","call","isIrrelevant","isRnStyle","Array","isArray","converted","convertStyles","_converted","forEach","createCss","StyleSheet","css","_len","args","raw","flatten","propertyValuePattern","convertPropertyValue","style","match","exec","shift","str","trim","stylePairs","parsedString","split","msg","message","includes","values","errorMsg","defaultPickTest","prop","createStyled","_temp","_ref","_ref$getShouldForward","getShouldForwardProp","createEmotion","component","pickTest","createStyledComponent","rawStyles","Styled","props","ref","Consumer","theme","mergedProps","stylesWithStyleProp","concat","emotionStyles","apply","innerRef","withComponent","newComponent","displayName","getDisplayName","primitive","name"],"mappings":"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","sourcesContent":["import transform from 'css-to-react-native';\nimport { forwardRef, createElement } from 'react';\nimport { ThemeContext } from '@emotion/core';\n\nvar testAlwaysTrue = function testAlwaysTrue() {\n  return true;\n};\nvar pickAssign = function pickAssign(testFn, target) {\n  var i = 2;\n  var length = arguments.length;\n\n  for (; i < length; i++) {\n    var source = arguments[i];\n\n    var _key = void 0;\n\n    for (_key in source) {\n      if (testFn(_key)) {\n        target[_key] = source[_key];\n      }\n    }\n  }\n\n  return target;\n};\nfunction interleave(vals) {\n  var strings = vals[0];\n  var finalArray = [strings[0]];\n\n  for (var i = 1, len = vals.length; i < len; i++) {\n    finalArray.push(vals[i]);\n\n    if (strings[i] !== undefined) {\n      finalArray.push(strings[i]);\n    }\n  }\n\n  return finalArray;\n}\n\n// they're reset on every call to css\n// this is done so we don't create a new\n// handleInterpolation function on every css call\n\nvar styles;\nvar buffer;\nvar lastType;\n\nfunction handleInterpolation(interpolation, i, arr) {\n  var type = typeof interpolation;\n\n  if (type === 'string') {\n    // strip comments\n    interpolation = interpolation.replace(/\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*$/gm, '');\n  }\n\n  if (type === 'function') {\n    if (this === undefined) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error('Interpolating functions in css calls is not allowed.\\n' + 'If you want to have a css call based on props, create a function that returns a css call like this\\n' + 'let dynamicStyle = (props) => css`color: ${props.color}`\\n' + 'It can be called directly with props or interpolated in a styled call like this\\n' + 'let SomeComponent = styled.View`${dynamicStyle}`');\n      }\n    } else {\n      handleInterpolation.call(this, interpolation( // $FlowFixMe\n      this), i, arr);\n    }\n\n    return;\n  }\n\n  var isIrrelevant = interpolation == null || type === 'boolean';\n  var isRnStyle = type === 'object' && !Array.isArray(interpolation) || type === 'number';\n\n  if (lastType === 'string' && (isRnStyle || isIrrelevant)) {\n    var converted = convertStyles(buffer);\n\n    if (converted !== undefined) {\n      styles.push(converted);\n    }\n\n    buffer = '';\n  }\n\n  if (isIrrelevant) {\n    return;\n  }\n\n  if (type === 'string') {\n    buffer += interpolation;\n\n    if (arr.length - 1 === i) {\n      var _converted = convertStyles(buffer);\n\n      if (_converted !== undefined) {\n        styles.push(_converted);\n      }\n\n      buffer = '';\n    }\n  }\n\n  if (isRnStyle) {\n    styles.push(interpolation);\n  }\n\n  if (Array.isArray(interpolation)) {\n    interpolation.forEach(handleInterpolation, this);\n  }\n\n  lastType = type;\n} // Use platform specific StyleSheet method for creating the styles.\n// This enables us to use the css``/css({}) in any environment (Native | Sketch | Web)\n\n\nfunction createCss(StyleSheet) {\n  return function css() {\n    var vals; // these are declared earlier\n    // this is done so we don't create a new\n    // handleInterpolation function on every css call\n\n    styles = [];\n    buffer = '';\n    lastType = undefined;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (args[0] == null || args[0].raw === undefined) {\n      vals = args;\n    } else {\n      vals = interleave(args);\n    }\n\n    vals.forEach(handleInterpolation, this);\n    return StyleSheet.flatten(styles);\n  };\n}\nvar propertyValuePattern = /\\s*([^\\s]+)\\s*:\\s*(.+?)\\s*$/;\n\nfunction convertPropertyValue(style) {\n  // Get prop name and prop value\n  var match = propertyValuePattern.exec(style); // match[2] will be \" \" in cases where there is no value\n  // but there is whitespace, e.g. \"color: \"\n\n  if (match !== null && match[2] !== ' ') {\n    // the first value in the array will\n    // be the whole string so we remove it\n    match.shift(); // yes i know this looks funny\n\n    this.push(match);\n  }\n}\n\nfunction convertStyles(str) {\n  if (str.trim() === '') return;\n  var stylePairs = [];\n  var parsedString = str.split(';');\n  parsedString.forEach(convertPropertyValue, stylePairs);\n\n  try {\n    return transform(stylePairs);\n  } catch (error) {\n    var msg = error.message;\n\n    if (msg.includes('Failed to parse declaration')) {\n      var values = msg.replace('Failed to parse declaration ', '').replace(/\"/g, '').trim().split(':');\n      var errorMsg = \"'\" + values[0] + \"' shorthand property requires units for example - \" + values[0] + \": 20px or \" + values[0] + \": 10px 20px 40px 50px\";\n      console.error(errorMsg);\n    }\n  }\n}\n\nvar defaultPickTest = function defaultPickTest(prop) {\n  return prop !== 'theme' && prop !== 'innerRef';\n};\n\nfunction createStyled(StyleSheet, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$getShouldForward = _ref.getShouldForwardProp,\n      getShouldForwardProp = _ref$getShouldForward === void 0 ? function () {\n    return defaultPickTest;\n  } : _ref$getShouldForward;\n\n  var css = createCss(StyleSheet);\n  return function createEmotion(component) {\n    var pickTest = getShouldForwardProp(component);\n    return function createStyledComponent() {\n      var styles;\n\n      for (var _len = arguments.length, rawStyles = new Array(_len), _key = 0; _key < _len; _key++) {\n        rawStyles[_key] = arguments[_key];\n      }\n\n      if (rawStyles[0] == null || rawStyles[0].raw === undefined) {\n        styles = rawStyles;\n      } else {\n        styles = interleave(rawStyles);\n      } // do we really want to use the same infra as the web since it only really uses theming?\n      // $FlowFixMe\n\n\n      var Styled = forwardRef(function (props, ref) {\n        return createElement(ThemeContext.Consumer, null, function (theme) {\n          var mergedProps = pickAssign(testAlwaysTrue, {}, props, {\n            theme: props.theme || theme\n          });\n          var stylesWithStyleProp = styles;\n\n          if (props.style) {\n            stylesWithStyleProp = styles.concat(props.style);\n          }\n\n          var emotionStyles = css.apply(mergedProps, stylesWithStyleProp);\n\n          if (process.env.NODE_ENV !== 'production' && props.innerRef) {\n            console.error('innerRef is no longer supported, please use ref instead');\n          }\n\n          return createElement(component, pickAssign(pickTest, {}, props, {\n            ref: ref,\n            style: emotionStyles\n          }));\n        });\n      }); // $FlowFixMe\n\n      Styled.withComponent = function (newComponent) {\n        return createEmotion(newComponent).apply(void 0, styles);\n      };\n\n      Styled.displayName = \"emotion(\" + getDisplayName(component) + \")\";\n      return Styled;\n    };\n  };\n}\n\nvar getDisplayName = function getDisplayName(primitive) {\n  return typeof primitive === 'string' ? primitive : primitive.displayName || primitive.name || 'Styled';\n};\n\nexport { createCss, createStyled };\n"]},"metadata":{},"sourceType":"module"}